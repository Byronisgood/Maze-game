{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FINAL-bird-maze\\\\bird-game\\\\src\\\\App.js\";\n// App.js\nimport React, { Component, Fragment } from 'react';\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\nimport Menu from './components/menu';\nimport Game from './components/game';\nimport ModalWinner from './modalwinner';\nimport TitleScreen from './components/TitleScreen';\nimport Instructions from './components/Instructions';\nimport AboutUs from './components/AboutUs';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      columns: 10,\n      rows: 10,\n      gameStart: false,\n      player: 1,\n      reds: [],\n      steps: 0,\n      totalCarrots: 0,\n      collectedCarrots: 0,\n      showModalWinner: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.createReds = this.createReds.bind(this);\n    this.movePlayer = this.movePlayer.bind(this);\n    this.setLevel = this.setLevel.bind(this);\n    this.updateCarrots = () => {\n      this.setState(prevState => ({\n        collectedCarrots: prevState.collectedCarrots + 1,\n        totalCarrots: prevState.totalCarrots - 1\n      }), () => {\n        if (this.state.totalCarrots === 0) {\n          this.openModalWinner();\n        }\n      });\n    };\n    this.restartGame = () => {\n      this.setState({\n        columns: 10,\n        rows: 10,\n        gameStart: false,\n        player: 1,\n        reds: [],\n        steps: 0,\n        totalCarrots: 0,\n        collectedCarrots: 0,\n        showModalWinner: false\n      });\n    };\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    const {\n      columns,\n      rows\n    } = this.state;\n    let playerPosition = Math.ceil(columns * rows / 2 % 2 === 0 ? columns * rows / 2 - columns / 2 : Math.ceil(columns * rows / 2));\n    document.documentElement.style.setProperty('--columns', columns);\n    document.documentElement.style.setProperty('--rows', rows);\n    this.setState({\n      gameStart: true,\n      player: playerPosition\n    }, () => {\n      this.createReds();\n    });\n  }\n  handleChange(e) {\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n  movePlayer(e) {\n    if (this.state.showModalWinner) {\n      return; // Don't process key events if modal is showing\n    }\n    if (this.state.reds.includes(this.state.player)) {\n      this.removeReds(this.state.player);\n    }\n    switch (e.keyCode) {\n      case 39:\n        this.setState(prevState => ({\n          player: prevState.player + 1 <= prevState.columns * prevState.rows && prevState.player % prevState.columns !== 0 ? prevState.player + 1 : prevState.player,\n          steps: prevState.steps + 1\n        }));\n        break;\n      case 37:\n        this.setState(prevState => ({\n          player: prevState.player - 1 > 0 && prevState.player % prevState.columns !== 1 ? prevState.player - 1 : prevState.player,\n          steps: prevState.steps + 1\n        }));\n        break;\n      case 38:\n        this.setState(prevState => ({\n          player: prevState.player - prevState.columns > 0 ? prevState.player - prevState.columns : prevState.player,\n          steps: prevState.steps + 1\n        }));\n        break;\n      case 40:\n        this.setState(prevState => ({\n          player: prevState.player + Number(prevState.columns) <= prevState.columns * prevState.rows ? prevState.player + Number(prevState.columns) : prevState.player,\n          steps: prevState.steps + 1\n        }));\n        break;\n      default:\n        break;\n    }\n  }\n  createReds() {\n    const {\n      columns,\n      rows,\n      player\n    } = this.state;\n    let array = [];\n    let index = 0;\n    let totalCarrots = 0;\n    for (let i = 0; i < columns; i++) {\n      for (let j = 0; j < rows; j++) {\n        index++;\n        if (Math.ceil(Math.random() * 10) === 5) {\n          if (index !== player) {\n            array.push(index);\n            totalCarrots++;\n          }\n        }\n      }\n    }\n    this.setState({\n      reds: array,\n      totalCarrots\n    });\n  }\n  removeReds(red) {\n    let array = [...this.state.reds];\n    let index = array.indexOf(red);\n    array.splice(index, 1);\n    this.setState({\n      reds: array\n    }, () => {\n      if (this.state.reds.length === 0) {\n        this.openModalWinner();\n      }\n    });\n  }\n  setLevel(columns, rows) {\n    this.setState({\n      columns,\n      rows\n    });\n  }\n  openModalWinner() {\n    this.setState({\n      showModalWinner: true\n    });\n  }\n  closeModalWinner() {\n    this.setState({\n      showModalWinner: false,\n      gameStart: false,\n      steps: 0,\n      collectedCarrots: 0,\n      totalCarrots: 0,\n      player: 1,\n      reds: []\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Maze-game\",\n          element: /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(TitleScreen, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/menu\",\n          element: /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"App\",\n              children: this.state.gameStart ? /*#__PURE__*/_jsxDEV(Game, {\n                movePlayer: this.movePlayer,\n                columns: this.state.columns,\n                rows: this.state.rows,\n                player: this.state.player,\n                steps: this.state.steps,\n                reds: this.state.reds,\n                totalCarrots: this.state.totalCarrots,\n                collectedCarrots: this.state.collectedCarrots,\n                updateCarrots: this.updateCarrots,\n                onObstacleHit: () => {\n                  alert('Game Over! You hit an obstacle.');\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Menu, {\n                columns: this.state.columns,\n                rows: this.state.rows,\n                handleSubmit: this.handleSubmit,\n                handleChange: this.handleChange,\n                setLevel: this.setLevel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ModalWinner, {\n              show: this.state.showModalWinner,\n              onClose: () => this.closeModalWinner(),\n              steps: this.state.steps - 1,\n              restartGame: this.restartGame\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/instructions\",\n          element: /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/aboutus\",\n          element: /*#__PURE__*/_jsxDEV(AboutUs, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Fragment","HashRouter","Router","Routes","Route","Menu","Game","ModalWinner","TitleScreen","Instructions","AboutUs","jsxDEV","_jsxDEV","App","constructor","args","state","columns","rows","gameStart","player","reds","steps","totalCarrots","collectedCarrots","showModalWinner","handleChange","bind","handleSubmit","createReds","movePlayer","setLevel","updateCarrots","setState","prevState","openModalWinner","restartGame","e","preventDefault","playerPosition","Math","ceil","document","documentElement","style","setProperty","target","value","name","includes","removeReds","keyCode","Number","array","index","i","j","random","push","red","indexOf","splice","length","closeModalWinner","render","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","className","onObstacleHit","alert","show","onClose"],"sources":["C:/Users/Admin/Desktop/FINAL-bird-maze/bird-game/src/App.js"],"sourcesContent":["// App.js\nimport React, { Component, Fragment } from 'react';\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\nimport Menu from './components/menu';\nimport Game from './components/game';\nimport ModalWinner from './modalwinner';\nimport TitleScreen from './components/TitleScreen';\nimport Instructions from './components/Instructions';\nimport AboutUs from './components/AboutUs';\nimport './App.css';\n\n\nclass App extends Component {\n  state = {\n    columns: 10,\n    rows: 10,\n    gameStart: false,\n    player: 1,\n    reds: [],\n    steps: 0,\n    totalCarrots: 0,\n    collectedCarrots: 0,\n    showModalWinner: false,\n    \n  };\n\n  handleChange = this.handleChange.bind(this);\n  handleSubmit = this.handleSubmit.bind(this);\n  createReds = this.createReds.bind(this);\n  movePlayer = this.movePlayer.bind(this);\n  setLevel = this.setLevel.bind(this);\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { columns, rows } = this.state;\n    let playerPosition = Math.ceil(\n      ((columns * rows) / 2) % 2 === 0\n        ? (columns * rows) / 2 - columns / 2\n        : Math.ceil((columns * rows) / 2)\n    );\n    document.documentElement.style.setProperty('--columns', columns);\n    document.documentElement.style.setProperty('--rows', rows);\n    this.setState({ gameStart: true, player: playerPosition }, () => {\n      this.createReds();\n    });\n  }\n\n  handleChange(e) {\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  movePlayer(e) {\n    if (this.state.showModalWinner) {\n      return; // Don't process key events if modal is showing\n    }\n\n    if (this.state.reds.includes(this.state.player)) {\n      this.removeReds(this.state.player);\n    }\n\n    switch (e.keyCode) {\n      case 39:\n        this.setState((prevState) => ({\n          player:\n            prevState.player + 1 <= prevState.columns * prevState.rows &&\n            prevState.player % prevState.columns !== 0\n              ? prevState.player + 1\n              : prevState.player,\n          steps: prevState.steps + 1,\n        }));\n        break;\n      case 37:\n        this.setState((prevState) => ({\n          player:\n            prevState.player - 1 > 0 && prevState.player % prevState.columns !== 1\n              ? prevState.player - 1\n              : prevState.player,\n          steps: prevState.steps + 1,\n        }));\n        break;\n      case 38:\n        this.setState((prevState) => ({\n          player:\n            prevState.player - prevState.columns > 0\n              ? prevState.player - prevState.columns\n              : prevState.player,\n          steps: prevState.steps + 1,\n        }));\n        break;\n      case 40:\n        this.setState((prevState) => ({\n          player:\n            prevState.player + Number(prevState.columns) <=\n            prevState.columns * prevState.rows\n              ? prevState.player + Number(prevState.columns)\n              : prevState.player,\n          steps: prevState.steps + 1,\n        }));\n        break;\n      default:\n        break;\n    }\n  }\n\n  createReds() {\n    const { columns, rows, player } = this.state;\n    let array = [];\n    let index = 0;\n    let totalCarrots = 0;\n\n    for (let i = 0; i < columns; i++) {\n      for (let j = 0; j < rows; j++) {\n        index++;\n        if (Math.ceil(Math.random() * 10) === 5) {\n          if (index !== player) {\n            array.push(index);\n            totalCarrots++;\n          }\n        }\n      }\n    }\n\n    this.setState({ reds: array, totalCarrots });\n  }\n\n  updateCarrots = () => {\n    this.setState(\n      (prevState) => ({\n        collectedCarrots: prevState.collectedCarrots + 1,\n        totalCarrots: prevState.totalCarrots - 1,\n      }),\n      () => {\n        if (this.state.totalCarrots === 0) {\n          this.openModalWinner();\n        }\n      }\n    );\n  };\n\n  removeReds(red) {\n    let array = [...this.state.reds];\n    let index = array.indexOf(red);\n    array.splice(index, 1);\n    this.setState({ reds: array }, () => {\n      if (this.state.reds.length === 0) {\n        this.openModalWinner();\n      }\n    });\n  }\n\n  setLevel(columns, rows) {\n    this.setState({ columns, rows });\n  }\n\n  openModalWinner() {\n    this.setState({ showModalWinner: true });\n  }\n\n  closeModalWinner() {\n    this.setState({\n      showModalWinner: false,\n      gameStart: false,\n      steps: 0,\n      collectedCarrots: 0,\n      totalCarrots: 0,\n      player: 1,\n      reds: [],\n    });\n  }\n\n  restartGame = () => {\n    this.setState({\n      columns: 10,\n      rows: 10,\n      gameStart: false,\n      player: 1,\n      reds: [],\n      steps: 0,\n      totalCarrots: 0,\n      collectedCarrots: 0,\n      showModalWinner: false,\n    });\n  };\n\n  render() {\n    return (\n      <Router>\n        <Routes>\n          <Route\n            path=\"/Maze-game\"\n            element={\n              <Fragment>\n                <TitleScreen />\n              </Fragment>\n            }\n          />\n          <Route\n            path=\"/menu\"\n            element={\n              <Fragment>\n                <div className=\"App\">\n                  {this.state.gameStart ? (\n                    <Game\n                      movePlayer={this.movePlayer}\n                      columns={this.state.columns}\n                      rows={this.state.rows}\n                      player={this.state.player}\n                      steps={this.state.steps}\n                      reds={this.state.reds}\n                      totalCarrots={this.state.totalCarrots}\n                      collectedCarrots={this.state.collectedCarrots}\n                      updateCarrots={this.updateCarrots}\n                      onObstacleHit={() => {\n                        alert('Game Over! You hit an obstacle.');\n                      }}\n                    />\n                  ) : (\n                    <Menu\n                      columns={this.state.columns}\n                      rows={this.state.rows}\n                      handleSubmit={this.handleSubmit}\n                      handleChange={this.handleChange}\n                      setLevel={this.setLevel}\n                    />\n                  )}\n                </div>\n                <ModalWinner\n                  show={this.state.showModalWinner}\n                  onClose={() => this.closeModalWinner()}\n                  steps={this.state.steps - 1}\n                  restartGame={this.restartGame}\n                />\n              </Fragment>\n            }\n          />\n          <Route path=\"/instructions\" element={<Instructions />} />\n          <Route path=\"/aboutus\" element={<AboutUs />} />\n        </Routes>\n      </Router>\n    );\n  }\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}