{"ast":null,"code":"// game-board.js\nimport React,{Component}from'react';import Square from'./square';import'./rules.css';import bgMusic from'./Music/birdMusic.mp3';import{jsx as _jsx}from\"react/jsx-runtime\";class GameBoard extends Component{constructor(props){super(props);this.state={fixedObstacles:[]};}componentDidMount(){this.generateFixedObstacles();}componentDidMount(){this.generateFixedObstacles();this.playBackgroundMusic();}componentWillUnmount(){this.pauseBackgroundMusic();}playBackgroundMusic(){this.audio=new Audio(bgMusic);this.audio.loop=true;this.audio.play();}pauseBackgroundMusic(){if(this.audio){this.audio.pause();this.audio.currentTime=0;}}generateFixedObstacles(){const{columns,rows,player,reds}=this.props;const obstacleCount=Math.ceil(columns*rows*0.1);const newObstacles=[];while(newObstacles.length<obstacleCount){const position=Math.ceil(Math.random()*(columns*rows));if(!newObstacles.includes(position)&&position!==player&&!reds.includes(position)&&!reds.some(red=>Math.abs(red-position)<=columns)){newObstacles.push(position);}}this.setState({fixedObstacles:newObstacles});}render(){const{columns,rows,player,steps,reds,updateCarrots,totalCarrots,collectedCarrots}=this.props;const{fixedObstacles}=this.state;return/*#__PURE__*/_jsx(\"div\",{className:\"game-board\",onKeyDown:this.props.movePlayer,tabIndex:\"0\",ref:game=>game&&game.focus(),children:Array.from({length:columns*rows},(_,index)=>/*#__PURE__*/_jsx(Square,{counter:index+1,player:player,reds:reds,isObstacle:fixedObstacles.includes(index+1),onSquareClick:counter=>this.handleSquareClick(counter,updateCarrots)},index+1))});}}export default GameBoard;","map":{"version":3,"names":["React","Component","Square","bgMusic","jsx","_jsx","GameBoard","constructor","props","state","fixedObstacles","componentDidMount","generateFixedObstacles","playBackgroundMusic","componentWillUnmount","pauseBackgroundMusic","audio","Audio","loop","play","pause","currentTime","columns","rows","player","reds","obstacleCount","Math","ceil","newObstacles","length","position","random","includes","some","red","abs","push","setState","render","steps","updateCarrots","totalCarrots","collectedCarrots","className","onKeyDown","movePlayer","tabIndex","ref","game","focus","children","Array","from","_","index","counter","isObstacle","onSquareClick","handleSquareClick"],"sources":["C:/Users/Admin/Desktop/FINAL-bird-maze/bird-game/src/components/game-board.js"],"sourcesContent":["// game-board.js\nimport React, { Component } from 'react';\nimport Square from './square';\nimport './rules.css';\nimport bgMusic from './Music/birdMusic.mp3';\nclass GameBoard extends Component {\n\tconstructor(props) {\n\t  super(props);\n\t  this.state = {\n\t\tfixedObstacles: [],\n\t  };\n\t}\n  \n\tcomponentDidMount() {\n\t  this.generateFixedObstacles();\n\t}\n\t\n\tcomponentDidMount() {\n\t\tthis.generateFixedObstacles();\n\t\tthis.playBackgroundMusic();\n\t  }\n\t\n\t  componentWillUnmount() {\n\t\tthis.pauseBackgroundMusic();\n\t  }\n\t\n\t  playBackgroundMusic() {\n\t\tthis.audio = new Audio(bgMusic);\n\t\tthis.audio.loop = true;\n\t\tthis.audio.play();\n\t  }\n\t\n\t  pauseBackgroundMusic() {\n\t\tif (this.audio) {\n\t\t  this.audio.pause();\n\t\t  this.audio.currentTime = 0;\n\t\t}\n\t  }\n  \n\tgenerateFixedObstacles() {\n\t  const { columns, rows, player, reds } = this.props;\n\t  const obstacleCount = Math.ceil(columns * rows * 0.1); \n\t  const newObstacles = [];\n  \n\t  while (newObstacles.length < obstacleCount) {\n\t\tconst position = Math.ceil(Math.random() * (columns * rows));\n\t\tif (\n\t\t  !newObstacles.includes(position) &&\n\t\t  position !== player &&\n\t\t  !reds.includes(position) &&\n\t\t  !reds.some((red) => Math.abs(red - position) <= columns) \n\t\t) {\n\t\t  newObstacles.push(position);\n\t\t}\n\t  }\n  \n\t  this.setState({ fixedObstacles: newObstacles });\n\t}\n  \n\t\n\t  \n\t  render() {\n\t\tconst { columns, rows, player, steps, reds, updateCarrots, totalCarrots, collectedCarrots } = this.props;\n\t\tconst { fixedObstacles } = this.state;\n\t  \n\t\treturn (\n\t\t  <div\n\t\t\tclassName=\"game-board\"\n\t\t\tonKeyDown={this.props.movePlayer}\n\t\t\ttabIndex=\"0\"\n\t\t\tref={(game) => game && game.focus()}\n\t\t  >\n\t\t\t{Array.from({ length: columns * rows }, (_, index) => (\n\t\t\t <Square\n\t\t\t key={index + 1}\n\t\t\t counter={index + 1}\n\t\t\t player={player}\n\t\t\t reds={reds}\n\t\t\t isObstacle={fixedObstacles.includes(index + 1)} \n\t\t\t onSquareClick={(counter) => this.handleSquareClick(counter, updateCarrots)}\n\t\t   />\n\t\t   \n\t\t\t))}\n\t\t\n\t\t  </div>\n\t\t);\n\t  }\n  }\n  \n  export default GameBoard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}