{"ast":null,"code":"// square.js\nimport React from'react';import'./rules.css';import{jsx as _jsx}from\"react/jsx-runtime\";const Square=_ref=>{let{counter,player,reds,isObstacle}=_ref;const isPlayer=counter===player;const squareClassName=\"\".concat(isPlayer?'player':'square',\" \").concat(reds.includes(counter)?'reds':'',\" \").concat(isObstacle?'obstacle':'');if(isPlayer&&isObstacle){alert('Game Over! You hit an obstacle.');}return/*#__PURE__*/_jsx(\"div\",{className:squareClassName,children:isPlayer&&/*#__PURE__*/_jsx(\"div\",{className:\"player\"})});};export default Square;","map":{"version":3,"names":["React","jsx","_jsx","Square","_ref","counter","player","reds","isObstacle","isPlayer","squareClassName","concat","includes","alert","className","children"],"sources":["C:/Users/Admin/Desktop/FINAL-bird-maze/bird-game/src/components/square.js"],"sourcesContent":["// square.js\nimport React from 'react';\nimport './rules.css';\nconst Square = ({ counter, player, reds, isObstacle, }) => {\n  const isPlayer = counter === player;\n\n  const squareClassName = `${isPlayer ? 'player' : 'square'} ${reds.includes(counter) ? 'reds' : ''} ${\n    isObstacle ? 'obstacle' : ''\n  }`;\n\n\n  if (isPlayer && isObstacle) {\n    alert('Game Over! You hit an obstacle.');\n\n  }\n\n  return (\n    <div className={squareClassName} >\n      {isPlayer && <div className=\"player\"></div>}\n    </div>\n  );\n};\n\nexport default Square;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBACrB,KAAM,CAAAC,MAAM,CAAGC,IAAA,EAA4C,IAA3C,CAAEC,OAAO,CAAEC,MAAM,CAAEC,IAAI,CAAEC,UAAY,CAAC,CAAAJ,IAAA,CACpD,KAAM,CAAAK,QAAQ,CAAGJ,OAAO,GAAKC,MAAM,CAEnC,KAAM,CAAAI,eAAe,IAAAC,MAAA,CAAMF,QAAQ,CAAG,QAAQ,CAAG,QAAQ,MAAAE,MAAA,CAAIJ,IAAI,CAACK,QAAQ,CAACP,OAAO,CAAC,CAAG,MAAM,CAAG,EAAE,MAAAM,MAAA,CAC/FH,UAAU,CAAG,UAAU,CAAG,EAAE,CAC5B,CAGF,GAAIC,QAAQ,EAAID,UAAU,CAAE,CAC1BK,KAAK,CAAC,iCAAiC,CAAC,CAE1C,CAEA,mBACEX,IAAA,QAAKY,SAAS,CAAEJ,eAAgB,CAAAK,QAAA,CAC7BN,QAAQ,eAAIP,IAAA,QAAKY,SAAS,CAAC,QAAQ,CAAM,CAAC,CACxC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAX,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}