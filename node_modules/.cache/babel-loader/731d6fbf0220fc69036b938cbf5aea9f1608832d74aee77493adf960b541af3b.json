{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FINAL-bird-maze\\\\bird-game\\\\src\\\\components\\\\game-board.js\";\n// game-board.js\nimport React, { Component } from 'react';\nimport Square from './square';\nimport './rules.css';\nimport bgMusic from './Music/birdMusic.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass GameBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fixedObstacles: []\n    };\n  }\n  componentDidMount() {\n    this.generateFixedObstacles();\n  }\n  componentDidMount() {\n    this.generateFixedObstacles();\n    this.playBackgroundMusic();\n  }\n  componentWillUnmount() {\n    this.pauseBackgroundMusic();\n  }\n  playBackgroundMusic() {\n    this.audio = new Audio(bgMusic);\n    this.audio.loop = true;\n    this.audio.play();\n  }\n  pauseBackgroundMusic() {\n    if (this.audio) {\n      this.audio.pause();\n      this.audio.currentTime = 0;\n    }\n  }\n  generateFixedObstacles() {\n    const {\n      columns,\n      rows,\n      player,\n      reds\n    } = this.props;\n    const obstacleCount = Math.ceil(columns * rows * 0.1);\n    const newObstacles = [];\n    while (newObstacles.length < obstacleCount) {\n      const position = Math.ceil(Math.random() * (columns * rows));\n      if (!newObstacles.includes(position) && position !== player && !reds.includes(position) && !reds.some(red => Math.abs(red - position) <= columns)) {\n        newObstacles.push(position);\n      }\n    }\n    this.setState({\n      fixedObstacles: newObstacles\n    });\n  }\n  render() {\n    const {\n      columns,\n      rows,\n      player,\n      steps,\n      reds,\n      updateCarrots,\n      totalCarrots,\n      collectedCarrots\n    } = this.props;\n    const {\n      fixedObstacles\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      onKeyDown: this.props.movePlayer,\n      tabIndex: \"0\",\n      ref: game => game && game.focus(),\n      children: Array.from({\n        length: columns * rows\n      }, (_, index) => /*#__PURE__*/_jsxDEV(Square, {\n        counter: index + 1,\n        player: player,\n        reds: reds,\n        isObstacle: fixedObstacles.includes(index + 1),\n        onSquareClick: counter => this.handleSquareClick(counter, updateCarrots)\n      }, index + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this);\n  }\n}\nexport default GameBoard;","map":{"version":3,"names":["React","Component","Square","bgMusic","jsxDEV","_jsxDEV","GameBoard","constructor","props","state","fixedObstacles","componentDidMount","generateFixedObstacles","playBackgroundMusic","componentWillUnmount","pauseBackgroundMusic","audio","Audio","loop","play","pause","currentTime","columns","rows","player","reds","obstacleCount","Math","ceil","newObstacles","length","position","random","includes","some","red","abs","push","setState","render","steps","updateCarrots","totalCarrots","collectedCarrots","className","onKeyDown","movePlayer","tabIndex","ref","game","focus","children","Array","from","_","index","counter","isObstacle","onSquareClick","handleSquareClick","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Admin/Desktop/FINAL-bird-maze/bird-game/src/components/game-board.js"],"sourcesContent":["// game-board.js\nimport React, { Component } from 'react';\nimport Square from './square';\nimport './rules.css';\nimport bgMusic from './Music/birdMusic.mp3';\nclass GameBoard extends Component {\n\tconstructor(props) {\n\t  super(props);\n\t  this.state = {\n\t\tfixedObstacles: [],\n\t  };\n\t}\n  \n\tcomponentDidMount() {\n\t  this.generateFixedObstacles();\n\t}\n\t\n\tcomponentDidMount() {\n\t\tthis.generateFixedObstacles();\n\t\tthis.playBackgroundMusic();\n\t  }\n\t\n\t  componentWillUnmount() {\n\t\tthis.pauseBackgroundMusic();\n\t  }\n\t\n\t  playBackgroundMusic() {\n\t\tthis.audio = new Audio(bgMusic);\n\t\tthis.audio.loop = true;\n\t\tthis.audio.play();\n\t  }\n\t\n\t  pauseBackgroundMusic() {\n\t\tif (this.audio) {\n\t\t  this.audio.pause();\n\t\t  this.audio.currentTime = 0;\n\t\t}\n\t  }\n  \n\tgenerateFixedObstacles() {\n\t  const { columns, rows, player, reds } = this.props;\n\t  const obstacleCount = Math.ceil(columns * rows * 0.1); \n\t  const newObstacles = [];\n  \n\t  while (newObstacles.length < obstacleCount) {\n\t\tconst position = Math.ceil(Math.random() * (columns * rows));\n\t\tif (\n\t\t  !newObstacles.includes(position) &&\n\t\t  position !== player &&\n\t\t  !reds.includes(position) &&\n\t\t  !reds.some((red) => Math.abs(red - position) <= columns) \n\t\t) {\n\t\t  newObstacles.push(position);\n\t\t}\n\t  }\n  \n\t  this.setState({ fixedObstacles: newObstacles });\n\t}\n  \n\t\n\t  \n\t  render() {\n\t\tconst { columns, rows, player, steps, reds, updateCarrots, totalCarrots, collectedCarrots } = this.props;\n\t\tconst { fixedObstacles } = this.state;\n\t  \n\t\treturn (\n\t\t  <div\n\t\t\tclassName=\"game-board\"\n\t\t\tonKeyDown={this.props.movePlayer}\n\t\t\ttabIndex=\"0\"\n\t\t\tref={(game) => game && game.focus()}\n\t\t  >\n\t\t\t{Array.from({ length: columns * rows }, (_, index) => (\n\t\t\t <Square\n\t\t\t key={index + 1}\n\t\t\t counter={index + 1}\n\t\t\t player={player}\n\t\t\t reds={reds}\n\t\t\t isObstacle={fixedObstacles.includes(index + 1)} \n\t\t\t onSquareClick={(counter) => this.handleSquareClick(counter, updateCarrots)}\n\t\t   />\n\t\t   \n\t\t\t))}\n\t\t\n\t\t  </div>\n\t\t);\n\t  }\n  }\n  \n  export default GameBoard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}